// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test artwork queries should find an artwork by id 1`] = `
Object {
  "data": Object {
    "findArtwork": Object {
      "Artworks": Array [
        Object {
          "title": "amazingsongT1itle",
        },
      ],
      "ClientErrorArgumentsConflict": null,
      "ClientErrorArtworkNotFound": null,
      "ClientErrorUnknown": null,
      "ClientErrorUserUnauthorized": null,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Test artwork queries should never return a pending artwork in a findUnique or findMany query 1`] = `
Object {
  "data": Object {
    "listArtworks": Object {
      "Artworks": Array [
        Object {
          "handle": "4",
          "saleType": "fixed",
        },
        Object {
          "handle": "5",
          "saleType": "fixed",
        },
        Object {
          "handle": "art 1",
          "saleType": "auction",
        },
        Object {
          "handle": "1",
          "saleType": "auction",
        },
        Object {
          "handle": "2",
          "saleType": "auction",
        },
        Object {
          "handle": "3",
          "saleType": "auction",
        },
      ],
      "ClientErrorArgumentsConflict": null,
      "ClientErrorArtworkNotFound": null,
      "ClientErrorUnknown": null,
      "ClientErrorUserUnauthorized": null,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Test artwork queries should not find an artwork by id and throw an error 1`] = `
Object {
  "data": Object {
    "findArtwork": Object {
      "Artworks": null,
      "ClientErrorArgumentsConflict": null,
      "ClientErrorArtworkNotFound": Object {
        "message": "Couldn't find artwork",
      },
      "ClientErrorUnknown": null,
      "ClientErrorUserUnauthorized": null,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Test artwork queries should query both auctions and fixed 1`] = `
Object {
  "data": Object {
    "listArtworks": Object {
      "Artworks": Array [
        Object {
          "handle": "4",
          "saleType": "fixed",
        },
        Object {
          "handle": "5",
          "saleType": "fixed",
        },
        Object {
          "handle": "art 1",
          "saleType": "auction",
        },
        Object {
          "handle": "1",
          "saleType": "auction",
        },
        Object {
          "handle": "2",
          "saleType": "auction",
        },
        Object {
          "handle": "3",
          "saleType": "auction",
        },
      ],
      "ClientErrorArgumentsConflict": null,
      "ClientErrorArtworkNotFound": null,
      "ClientErrorUnknown": null,
      "ClientErrorUserUnauthorized": null,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Test artwork queries should query only auctions  1`] = `
Object {
  "data": Object {
    "listArtworks": Object {
      "Artworks": Array [
        Object {
          "handle": "3",
          "saleType": "auction",
        },
        Object {
          "handle": "2",
          "saleType": "auction",
        },
        Object {
          "handle": "1",
          "saleType": "auction",
        },
        Object {
          "handle": "art 1",
          "saleType": "auction",
        },
      ],
      "ClientErrorArgumentsConflict": null,
      "ClientErrorArtworkNotFound": null,
      "ClientErrorUnknown": null,
      "ClientErrorUserUnauthorized": null,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Test artwork queries should query only fixed sales  1`] = `
Object {
  "data": Object {
    "listArtworks": Object {
      "Artworks": Array [
        Object {
          "handle": "5",
          "saleType": "fixed",
        },
        Object {
          "handle": "4",
          "saleType": "fixed",
        },
      ],
      "ClientErrorArgumentsConflict": null,
      "ClientErrorArtworkNotFound": null,
      "ClientErrorUnknown": null,
      "ClientErrorUserUnauthorized": null,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Test artwork queries should query only fixed sales that are listed  1`] = `
Object {
  "data": Object {
    "listArtworks": Object {
      "Artworks": Array [
        Object {
          "handle": "5",
          "saleType": "fixed",
        },
        Object {
          "handle": "4",
          "saleType": "fixed",
        },
      ],
      "ClientErrorArgumentsConflict": null,
      "ClientErrorArtworkNotFound": null,
      "ClientErrorUnknown": null,
      "ClientErrorUserUnauthorized": null,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Test artwork queries should return false if a handle is not available 1`] = `
Object {
  "data": Object {
    "handle": false,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Test artwork queries should return true if a handle is available 1`] = `
Object {
  "data": Object {
    "handle": true,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;
