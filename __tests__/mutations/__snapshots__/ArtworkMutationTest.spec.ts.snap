// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test artwork mutations should create an artwork 1`] = `
Object {
  "data": Object {
    "addArtwork": Object {
      "Artwork": Object {
        "creator": Object {
          "fullName": "user 1",
        },
        "description": "Art",
        "owner": Object {
          "fullName": "user 1",
        },
        "saleType": "auction",
        "title": "strstrstr",
      },
      "ArtworkArgumentsConflict": null,
      "ArtworkNotFound": null,
      "ClientError": null,
      "UserUnauthorized": null,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Test artwork mutations should delete an artork with an existing id 1`] = `
Object {
  "data": Object {
    "deleteArtwork": Object {
      "Artwork": Object {
        "handle": "something",
      },
      "ArtworkArgumentsConflict": null,
      "ArtworkNotFound": null,
      "ClientError": null,
      "UserUnauthorized": null,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Test artwork mutations should fail to create an artwork because the user is not an approved creator 1`] = `
Object {
  "data": Object {
    "addArtwork": Object {
      "Artwork": null,
      "ArtworkArgumentsConflict": null,
      "ArtworkNotFound": null,
      "ClientError": null,
      "UserUnauthorized": Object {
        "message": "Not approved or non-existing creator",
      },
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Test artwork mutations should fail to create an artwork with fixed sale type and reserve price set 1`] = `
Object {
  "data": Object {
    "addArtwork": Object {
      "Artwork": null,
      "ArtworkArgumentsConflict": Object {
        "message": "Argument conflict.",
        "path": "Fixed sale requires a price arg and no reservePrice arg",
      },
      "ArtworkNotFound": null,
      "ClientError": null,
      "UserUnauthorized": null,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Test artwork mutations should try to delete an artork that doesn't exist 1`] = `
Object {
  "data": Object {
    "deleteArtwork": Object {
      "Artwork": null,
      "ArtworkArgumentsConflict": null,
      "ArtworkNotFound": Object {
        "message": "Couldn't find artwork with id artworkId",
      },
      "ClientError": null,
      "UserUnauthorized": null,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Test artwork mutations should try to delete an artwork that the user does not own and created 1`] = `
Object {
  "data": Object {
    "deleteArtwork": Object {
      "Artwork": null,
      "ArtworkArgumentsConflict": null,
      "ArtworkNotFound": null,
      "ClientError": null,
      "UserUnauthorized": Object {
        "message": "User is not the current owner",
      },
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Test artwork mutations should try to delete an artwork that the user does not own and did not create 1`] = `
Object {
  "data": Object {
    "deleteArtwork": Object {
      "Artwork": null,
      "ArtworkArgumentsConflict": null,
      "ArtworkNotFound": null,
      "ClientError": null,
      "UserUnauthorized": Object {
        "message": "User is not the current owner",
      },
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;
