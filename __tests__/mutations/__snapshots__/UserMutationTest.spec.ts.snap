// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test user mutations should create a user 1`] = `
Object {
  "data": Object {
    "registerUser": Object {
      "ClientErrorHandleAlreadyExists": null,
      "ClientErrorInvalidHandle": null,
      "ClientErrorUnknown": null,
      "ClientErrorUserNotFound": null,
      "Users": Array [
        Object {
          "bio": "All things Crypto, reflection level 1009%",
          "email": "test@hashtune.co",
          "fullName": "Humam Abo Alraja",
          "handle": "humam",
          "image": "734q6utyfouivygioq.jpg",
          "isApprovedCreator": false,
          "wallet": Object {
            "publicKey": "ckuo1gjak0007wfhfqxk23q73",
          },
        },
      ],
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Test user mutations should not create a user if the handle contains non alphanumric characters 1`] = `
Object {
  "data": Object {
    "registerUser": Object {
      "ClientErrorHandleAlreadyExists": null,
      "ClientErrorInvalidHandle": Object {
        "message": "We only accept lower case alpha number (abc, 123) characters less than 60 characters",
      },
      "ClientErrorUnknown": null,
      "ClientErrorUserNotFound": null,
      "Users": null,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Test user mutations should not create a user if the handle contains over 30 characters 1`] = `
Object {
  "data": Object {
    "registerUser": Object {
      "ClientErrorHandleAlreadyExists": null,
      "ClientErrorInvalidHandle": Object {
        "message": "We only accept lower case alpha number (abc, 123) characters less than 60 characters",
      },
      "ClientErrorUnknown": null,
      "ClientErrorUserNotFound": null,
      "Users": null,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Test user mutations should not create a user if the handle is already taken 1`] = `
Object {
  "data": Object {
    "registerUser": Object {
      "ClientErrorHandleAlreadyExists": Object {
        "message": "This handle is already taken, please try a new one",
      },
      "ClientErrorInvalidHandle": null,
      "ClientErrorUnknown": null,
      "ClientErrorUserNotFound": null,
      "Users": null,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Test user mutations should not create a user if the handle is capitalized 1`] = `
Object {
  "data": Object {
    "registerUser": Object {
      "ClientErrorHandleAlreadyExists": null,
      "ClientErrorInvalidHandle": Object {
        "message": "We only accept lower case alpha number (abc, 123) characters less than 60 characters",
      },
      "ClientErrorUnknown": null,
      "ClientErrorUserNotFound": null,
      "Users": null,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;
